AWSTemplateFormatVersion: "2010-09-09"
Description: VaultDB Infrstructure.
Parameters:
  VPCState:
    Type: String
    AllowedValues:
      - new
      - existing
    ConstraintDescription: Must state whether there is an existing VPC or not

  PrimarySubnetAZ:
    Type: AWS::EC2::AvailabilityZone::Name
    AllowedPattern: ".+"
    Description: Enter the primary availability zone for your subnet.

  PublicSubnetCIDR:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    # Default: 10.0.10.0/24
    Description: VPC CIDR Block for the Public Subnet (eg 10.0.10.0/24)
    Type: String

  PrivateSubnetCIDR:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    # Default: 10.0.20.0/24
    Description: VPC CIDR Block for the Public Subnet (eg 10.0.20.0/24)
    Type: String    

  CidrBlock:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    # Default: 10.0.0.0/16
    Description: VPC CIDR Block (eg 10.0.0.0/16)
    Type: String
    
  ExistingVPC:
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: Please Choose existing VPC to use existing    

  BucketName:
    Type: String
    Default: 'vaultdb-hosted-content'
    Description: Vaultdb Cloudformation template store. Please do not change unless you have custom templates.

Conditions:
  IsNewVPC: !Equals [ !Ref VPCState, new ]
  UseExistingVPC: !Equals [ !Ref VPCState, existing ]

Rules:
  RequiredParameterAssertions:
    Assertions:
      - AssertDescription: VPCState is required
        Assert: !Not [!Equals [!Ref VPCState, '']]
      - AssertDescription: Primary Subnet is required
        Assert: !Not [!Equals [!Ref PrimarySubnetAZ, '']]
      - AssertDescription: Primary Subnet is cannot be empty
        Assert: !Not [!Equals [!Ref PrimarySubnetAZ, '']]
      - AssertDescription: CidrBlock is required
        Assert: !Not [!Equals [!Ref CidrBlock, '']]
      - AssertDescription: Public Subnet CIDR is required
        Assert: !Not [!Equals [!Ref PublicSubnetCIDR, '']]
      - AssertDescription: Private Subnet CIDR is required
        Assert: !Not [!Equals [!Ref PrivateSubnetCIDR, '']]

Mappings:
 constants:
  VaultDbBucket:
   Name: "test"

Resources:
  NewVPCStack:
    Type: AWS::CloudFormation::Stack
    Condition: IsNewVPC
    Properties:
      TemplateURL:
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref BucketName
            - '/awsquickstart/infra/vpc-new.yaml'
      Parameters:
        PrimarySubnetAZ: !Ref PrimarySubnetAZ
        PublicSubnetCIDR: !Ref PublicSubnetCIDR
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        CidrBlock: !Ref CidrBlock
        
  ExistingVPCStack:
    Type: AWS::CloudFormation::Stack
    Condition: UseExistingVPC
    Properties:
      TemplateURL:
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref BucketName
            - '/awsquickstart/infra/vpc-existing.yaml'
      Parameters:
        PrimarySubnetAZ: !Ref PrimarySubnetAZ
        PublicSubnetCIDR: !Ref PublicSubnetCIDR
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        ExistingVPC: !Ref ExistingVPC

  EFSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref BucketName
            - '/awsquickstart/infra/efs-commit-log-storage.yaml'
      Parameters:
        ApplicationName: !Ref AWS::StackName
        VPCStackName: !If [ IsNewVPC, !Ref NewVPCStack, !Ref ExistingVPCStack ]

  DataStoreStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref BucketName
            - '/awsquickstart/infra/s3-data-store.yaml'
      Parameters:
        ApplicationName: !Ref AWS::StackName
        VPCStackName: !If [ IsNewVPC, !Ref NewVPCStack, !Ref ExistingVPCStack ]
