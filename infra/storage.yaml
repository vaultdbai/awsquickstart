AWSTemplateFormatVersion: "2010-09-09"
Description: VaultDB Create secure S3 bucket to store data

Parameters:
  ApplicationName:
    Type: String
    AllowedPattern: "^[a-z][a-z0-9-]{0,48}[a-z0-9]$"
    Description: Enter the name of your application with no spaces.

Metadata:
  Author: VaultDB.ai
  Url: https://vaultdb.ai

Rules:
  ApplicationNameIsRequired:
    Assertions:
      - AssertDescription: Application Name is required
        Assert: !Not [!Equals [!Ref ApplicationName, '']]

Resources:  
  AccessLogBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: LogDeliveryWrite
            
  DataBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ['', ['vaultdb', '-data-', !Ref ApplicationName]]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogBucket
        LogFilePrefix: Join ['', ['vaultdb', '-data-store-logs-', !Ref ApplicationName]]

  PublicBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ['', ['vaultdb', '-public-storage-', !Ref ApplicationName]]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogBucket
        LogFilePrefix: Join ['', ['vaultdb', '-public-storage-logs-', !Ref ApplicationName]]

  PublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PublicBucket
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${PublicBucket}/*

  EFSFileSystem:
      Type: AWS::EFS::FileSystem
      Properties:
          BackupPolicy:
            Status: ENABLED
          Encrypted: true
          LifecyclePolicies:
            - TransitionToIA: AFTER_60_DAYS
          PerformanceMode: generalPurpose
          ThroughputMode: bursting
          FileSystemTags: 
            - 
              Key: Environment
              Value: !Ref ApplicationName
            - 
              Key: Name
              Value: !Join ['', ['vaultdb', '-EFS-', !Ref ApplicationName]]
            - 
              Key: Project
              Value: !Ref ApplicationName
            - 
              Key: createdBy
              Value: vaultdb.ai

  DataSecurityGroup:
      Type: "AWS::EC2::SecurityGroup"
      Properties:
          GroupDescription: "security group for the prod EFS"
          GroupName: !Join ['', ['vaultdb', '-data-securitygroup-', !Ref ApplicationName]]
          VpcId:
            Fn::ImportValue: !Sub '${ApplicationName}-VPC'
          Tags:
            - 
              Key: Environment
              Value: !Ref ApplicationName
            - 
              Key: Name
              Value: !Join ['', ['vaultdb', '-data-securitygroup-', !Ref ApplicationName]]
            - 
              Key: Project
              Value: !Ref ApplicationName
            - 
              Key: createdBy
              Value: vaultdb.ai

  EFSMountTarget:
      Type: AWS::EFS::MountTarget
      Properties: 
          FileSystemId: !Ref EFSFileSystem
          SecurityGroups: 
            - !Ref DataSecurityGroup
          SubnetId: 
            Fn::ImportValue: !Sub '${ApplicationName}-VPCPrivateSubnet'

  EFSSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
        Description: "Allow EFS to connect to servers and lambda"
        GroupId: !Ref DataSecurityGroup
        FromPort: 2049
        IpProtocol: "tcp"
        ToPort: 2049

  S3SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
        Description: "Allow EFS to connect to servers and lambda"
        GroupId: !Ref DataSecurityGroup
        FromPort: 80
        IpProtocol: "tcp"
        ToPort: 80

  EFSInterfaceEndpoint:
      Type: 'AWS::EC2::VPCEndpoint'
      Properties:
          VpcEndpointType: Interface
          ServiceName: !Sub 'com.amazonaws.${AWS::Region}.elasticfilesystem'
          VpcId:
            Fn::ImportValue: !Sub '${ApplicationName}-VPC'
          SubnetIds: 
            - Fn::ImportValue: !Sub '${ApplicationName}-VPCPrivateSubnet'
          SecurityGroupIds:
            - !Ref DataSecurityGroup

  S3GatewayEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: 
        Fn::ImportValue: !Sub "${ApplicationName}-VPC"
      RouteTableIds:
        - Fn::ImportValue: !Sub "${ApplicationName}-PrivateRouteTable"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:*'
            Resource:
              - !Ref DataBucket
              - !Ref PublicBucket

Outputs:
  DataBucketName:
    Description: Name of the main bucket
    Value: !Ref DataBucket
    Export:
      Name: !Sub ${ApplicationName}-DataBucket
  PulicBucketName:
    Description: Name of the public bucket
    Value: !Ref PublicBucket
    Export:
      Name: !Sub ${ApplicationName}-PublicBucket
  LogBucketName:
    Description: Name of the access log bucket
    Value: !Ref AccessLogBucket
    Export:
      Name: !Sub ${ApplicationName}-AccessLogBucket
  EFS:
    Description: The created EFS 
    Value: !Ref EFSFileSystem
    Export:
      Name: !Sub ${ApplicationName}-EFSFileSystem
  DataSecurityGroup:
    Description: The EFS SecurityGroup
    Value: !Ref DataSecurityGroup
    Export:
      Name: !Sub ${ApplicationName}-DataSecurityGroup
  EFSInterfaceEndpoint:
    Description: The EFS EFSInterfaceEndpoint
    Value: !Ref EFSInterfaceEndpoint
    Export:
      Name: !Sub ${ApplicationName}-EFSInterfaceEndpoint
  EFSMountTarget:
    Description: The EFS EFSMountTarget
    Value: !Ref EFSMountTarget
    Export:
      Name: !Sub ${ApplicationName}-EFSMountTarget
