name: Upload Cloudformation templates & deploy for preview

on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 2 * * *"
  repository_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'examples/**'
      - 'test/**'
      - '.github/workflows/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/master' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  Deploy:
    name: Deploy Vaultdb Analytics and Datalake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.S3_ID }}
          aws-secret-access-key: ${{ secrets.S3_KEY }}
          aws-region: us-east-1 
          # ECR Public can only be logged into from the us-east-1 region. In the aws-actions/configure-aws-credentials action, the aws-region input must be us-east-1
          
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: "i2q7a2j7"
          REPOSITORY: "vaultdb"
          IMAGE_TAG: lambda
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"

      - name: Build distribtion
        shell: bash
        run: |
          mkdir -p dist
          cp ./*.yaml ./dist/
          cp ./*.html ./dist/
          cp ./*.json ./dist/

      - uses: vitorsgomes/s3-rm-action@master
        name: cleanup s3 folder awsquickstart
        with:
          args: --recursive
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          PATH_TO_DELETE: 'awsquickstart'

      - uses: shallwefootball/s3-upload-action@master
        name: Upload S3
        id: S3
        with:
          aws_key_id: ${{ secrets.S3_ID }}
          aws_secret_access_key: ${{ secrets.S3_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'dist'
          destination_dir: 'awsquickstart'
