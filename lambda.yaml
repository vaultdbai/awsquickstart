AWSTemplateFormatVersion: 2010-09-09
Description: VaultDB Lambda function to execute Queries
Metadata:
  Author: VaultDB.ai
  Url: https://www.vaultdb.ai

Parameters:
  ApplicationName:
    Type: String
    AllowedPattern: "^[a-z][a-z0-9-]{0,48}[a-z0-9]$"
    Description: Enter the name of your application with no spaces.
  
  LambdaImageUri:
    Type: String
    Default: "440955376164.dkr.ecr.us-east-2.amazonaws.com/vaultdb:lambda"

Resources:
  ExecuteRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["", [!Ref ApplicationName, "-execution-role"]]
      Tags:
        - Key: Purpose
          Value: "VaultDB"
        - Key: Project
          Value: !Ref ApplicationName
        - Key: createdBy
          Value: vaultdb.ai
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName:
            !Join ["", [!Ref ApplicationName, "-execution-service-policy"]]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:ListMultipartUploadParts
                  - s3:*Object
                  - s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                Resource: "*"
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeInstances
                  - ec2:AttachNetworkInterface
                Resource: "*"

  ExecuteQueryFunction:
    Type: AWS::Lambda::Function
    Properties:
      Tags:
        - Key: Purpose
          Value: "VaultDB"
        - Key: Project
          Value: !Ref ApplicationName
        - Key: createdBy
          Value: vaultdb.ai
      Description: Execute Vaultdb SQL Queries
      FunctionName: !Join ["", [!Ref ApplicationName, "-execute-query"]]
      Role: !GetAtt ExecuteRole.Arn
      Code:
        ImageUri: !Ref LambdaImageUri
      PackageType: Image
      ImageConfig:
        Command: 
          - query.lambda_handler
      Architectures:
        - x86_64
      Timeout: 240
      MemorySize: 256
      Environment:
        Variables:
          application_name: !Sub "${ApplicationName}"
          AWS_STS_REGIONAL_ENDPOINTS: "regional"
          commitlog_directory: "/mnt/commitlog"
          HOME: "/mnt/commitlog"
          public_bucket:
            Fn::ImportValue: !Sub "${ApplicationName}-PublicBucket"
          data_store:
            Fn::ImportValue: !Sub "${ApplicationName}-DataBucket"
          user_pool_id:
            Fn::ImportValue: !Sub "${ApplicationName}-UserPool"
          user_pool_client_id:
            Fn::ImportValue: !Sub "${ApplicationName}-UserPoolClient"
          identity_pool_id:
            Fn::ImportValue: !Sub "${ApplicationName}-IdentityPool"
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub "${ApplicationName}-DataSecurityGroup"
        SubnetIds:
          - Fn::ImportValue: !Sub "${ApplicationName}-VPCPrivateSubnet"
      FileSystemConfigs:
        - Arn: 
            Fn::ImportValue: !Sub "${ApplicationName}-EFSAccessPointResource"
          LocalMountPath: /mnt/commitlog

Outputs:
  ExecuteRole:
    Description: VaultDB Execution Role that works on behalf of user
    Value: !GetAtt ExecuteRole.Arn
    Export:
      Name: !Sub ${ApplicationName}-ExecuteRole
  ExecuteQueryFunction:
    Description: VaultDB Execute Query Function
    Value: !Ref ExecuteQueryFunction
    Export:
      Name: !Sub ${ApplicationName}-ExecuteQueryFunction
            
  CLI:
    Description: Use this command to invoke the Lambda function
    Value: !Sub |
      aws lambda invoke --function-name 'vaultdb-execute-query-${ApplicationName}' --payload 'SELECT CURRENT_CATALOG' lambda-output.txt --cli-binary-format raw-in-base64-out
